// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  password String    @db.VarChar(255)
  posts    Post[]
  profile  Profile?
  Product  Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  category    String?
  style       String?
  store       String?
  size        String?
  inventory   Int?
  color       String?
  price       Int?
  images      String   @db.Text
  userId      Int
  reviews     Review[]
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Rating      Rating[]

  @@index([userId])
}

model ProductSample {
  id     Int    @id @default(autoincrement())
  title  String
  images String @db.Text
}

model Review {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Rating {
  id        Int      @id @default(autoincrement())
  rating    Decimal
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}
